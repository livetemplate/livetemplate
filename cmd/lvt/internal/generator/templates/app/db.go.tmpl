package database

import (
	"database/sql"
	"fmt"
	"log"
	"os"

	"[[.ModuleName]]/internal/database/models"
	_ "modernc.org/sqlite"
)

var (
	database *sql.DB
	queries  *models.Queries
)

func InitDB(dbPath string) (*models.Queries, error) {
	var err error

	database, err = sql.Open("sqlite", dbPath)
	if err != nil {
		return nil, fmt.Errorf("failed to open database: %w", err)
	}

	if err := database.Ping(); err != nil {
		return nil, fmt.Errorf("failed to ping database: %w", err)
	}

	if err := runMigrations(database); err != nil {
		return nil, fmt.Errorf("failed to run migrations: %w", err)
	}

	queries = models.New(database)

	log.Printf("Database initialized at: %s", dbPath)
	return queries, nil
}

func runMigrations(db *sql.DB) error {
	schema, err := os.ReadFile("internal/database/schema.sql")
	if err != nil {
		return fmt.Errorf("failed to read schema.sql: %w", err)
	}

	_, err = db.Exec(string(schema))
	return err
}

func CloseDB() {
	if database != nil {
		if err := database.Close(); err != nil {
			log.Printf("Error closing database: %v", err)
		} else {
			log.Println("Database connection closed")
		}
	}
}
